name: ‚ú® Deploy to production

on:
  push:
    brances:
    - main

jobs:
  build: 
    name: üê≥ build and push docker image
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: üòä checkout
        uses: actions/checkout@v2
      - name: login to docker
        uses: docker/login-action@v2
        with:
          registry: ${{secrets.DOCKER_REGISTRY}}
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: ‚òÅÔ∏è Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_IMAGE_PRODUCTION}}:latest
  
  deploy:
    name: deploy to server
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    steps:
      - name: remote ssh
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            password: ${{ secrets.SSH_PASSWORD }}
            script: |
              docker pull ${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_IMAGE_PRODUCTION}}:latest
              docker run --name ${{secrets.CONTAINER_NAME}} ${{secrets.CONTAINER_ENV_PROD}} --label traefik.enable=true --traefik.http.routers.${{secrets.CONTAINER_NAME}}.rule=Host("${{secrets.CONTAINER_HOST_PROD}}") --label traefik.http.routers.${{secrets.CONTAINER_NAME}}.entrypoints=websecure --label traefik.http.routers.${{secrets.CONTAINER_NAME}}.tls.certresolver=myresolver --network proxy